{"ast":null,"code":"import { shopActionType } from \"./shop.type\";\nexport const fetchCollectionStart = () => ({\n  type: shopActionType.FETCH_COLLECTION_START\n});\nexport const fetchCollectionSuccess = collection => ({\n  type: shopActionType.FETCH_COLLECTION_SUCCESS,\n  payload: collection\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collection\");\n    collectionRef.get().then(snapshot => {\n      const collectionObject = convertCollectionSnapshotToMap(snapshot);\n      updateShopCollections(collectionObject);\n      this.setState({\n        isLoading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/NayanJagtap/Desktop/current/crwn-clothing/src/redux/shop/shop.action.js"],"names":["shopActionType","fetchCollectionStart","type","FETCH_COLLECTION_START","fetchCollectionSuccess","collection","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionStartAsync","dispatch","collectionRef","firestore","get","then","snapshot","collectionObject","convertCollectionSnapshotToMap","updateShopCollections","setState","isLoading"],"mappings":"AAAA,SAASA,cAAT,QAA+B,aAA/B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEF,cAAc,CAACG;AADoB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,UAAD,KAAiB;AACrDH,EAAAA,IAAI,EAAEF,cAAc,CAACM,wBADgC;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAjB,CAA/B;AAKP,OAAO,MAAMG,yBAAyB,GAAG,MAAM;AAC7C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGC,SAAS,CAACN,UAAV,CAAqB,YAArB,CAAtB;AACAK,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,gBAAgB,GAAGC,8BAA8B,CAACF,QAAD,CAAvD;AACAG,MAAAA,qBAAqB,CAACF,gBAAD,CAArB;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAJD;AAKD,GAPD;AAQD,CATM","sourcesContent":["import { shopActionType } from \"./shop.type\";\r\n\r\nexport const fetchCollectionStart = () => ({\r\n  type: shopActionType.FETCH_COLLECTION_START,\r\n});\r\n\r\nexport const fetchCollectionSuccess = (collection) => ({\r\n  type: shopActionType.FETCH_COLLECTION_SUCCESS,\r\n  payload: collection,\r\n});\r\n\r\nexport const fetchCollectionStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collection\");\r\n    collectionRef.get().then((snapshot) => {\r\n      const collectionObject = convertCollectionSnapshotToMap(snapshot);\r\n      updateShopCollections(collectionObject);\r\n      this.setState({ isLoading: false });\r\n    });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}