{"ast":null,"code":"import { takeLatest, call, put, all, select } from \"redux-saga/effects\";\nimport { shopActionType } from \"./shop.type\";\nimport { fetchCollectionSuccess, fetchCollectionFailure, fetchCollectionStart } from \"./shop.action\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { selectColletionsPerview } from \"./shop.selector\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collection\");\n    const snapshot = yield collectionRef.get();\n    const collectionObject = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionObject));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\nexport function* onFetchCollectionStart() {\n  yield takeLatest(shopActionType.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}\nexport function* collectionsCheck() {\n  console.log(\"start\");\n  const collections = select(selectColletionsPerview);\n  console.log(collections);\n}\nexport function* onCollectionsCheck() {\n  yield takeLatest(shopActionType.CHECK_COLLECTION, collectionsCheck);\n}\nexport function* shopsagas() {\n  yield all([call(onFetchCollectionStart), call(onCollectionsCheck)]);\n}","map":{"version":3,"sources":["C:/Users/NayanJagtap/Desktop/current/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","select","shopActionType","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionStart","firestore","convertCollectionSnapshotToMap","selectColletionsPerview","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionObject","error","message","onFetchCollectionStart","FETCH_COLLECTION_START","collectionsCheck","console","log","collections","onCollectionsCheck","CHECK_COLLECTION","shopsagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,MAArC,QAAmD,oBAAnD;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,oBAHF,QAIO,eAJP;AAKA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAIA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,YAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,gBAAgB,GAAG,MAAMhB,IAAI,CACjCS,8BADiC,EAEjCK,QAFiC,CAAnC;AAIA,UAAMb,GAAG,CAACI,sBAAsB,CAACW,gBAAD,CAAvB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACK,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,sBAAV,GAAmC;AACxC,QAAMpB,UAAU,CACdK,cAAc,CAACgB,sBADD,EAEdT,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,gBAAV,GAA6B;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,QAAMC,WAAW,GAAGrB,MAAM,CAACO,uBAAD,CAA1B;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACD;AAED,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAM1B,UAAU,CAACK,cAAc,CAACsB,gBAAhB,EAAkCL,gBAAlC,CAAhB;AACD;AAED,OAAO,UAAUM,SAAV,GAAsB;AAC3B,QAAMzB,GAAG,CAAC,CAACF,IAAI,CAACmB,sBAAD,CAAL,EAA+BnB,IAAI,CAACyB,kBAAD,CAAnC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all, select } from \"redux-saga/effects\";\r\nimport { shopActionType } from \"./shop.type\";\r\nimport {\r\n  fetchCollectionSuccess,\r\n  fetchCollectionFailure,\r\n  fetchCollectionStart,\r\n} from \"./shop.action\";\r\nimport {\r\n  firestore,\r\n  convertCollectionSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\nimport { selectColletionsPerview } from \"./shop.selector\";\r\nexport function* fetchCollectionsAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection(\"collection\");\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionObject = yield call(\r\n      convertCollectionSnapshotToMap,\r\n      snapshot\r\n    );\r\n    yield put(fetchCollectionSuccess(collectionObject));\r\n  } catch (error) {\r\n    yield put(fetchCollectionFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onFetchCollectionStart() {\r\n  yield takeLatest(\r\n    shopActionType.FETCH_COLLECTION_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n\r\nexport function* collectionsCheck() {\r\n  console.log(\"start\");\r\n  const collections = select(selectColletionsPerview);\r\n  console.log(collections);\r\n}\r\n\r\nexport function* onCollectionsCheck() {\r\n  yield takeLatest(shopActionType.CHECK_COLLECTION, collectionsCheck);\r\n}\r\n\r\nexport function* shopsagas() {\r\n  yield all([call(onFetchCollectionStart), call(onCollectionsCheck)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}