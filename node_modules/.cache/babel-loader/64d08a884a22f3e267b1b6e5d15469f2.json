{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { shopActionType } from \"./shop.type\";\nimport { fetchCollectionSuccess, fetchCollectionFailure } from \"./shop.action\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collection\");\n    const snapshot = yield collectionRef.get();\n    const collectionObject = call(convertCollectionSnapshotToMap, snapshot);\n    put(fetchCollectionSuccess(collectionObject));\n  } catch (error) {\n    put(fetchCollectionFailure(error.message));\n  } // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionObject = convertCollectionSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionSuccess(collectionObject));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionFailure(error.message)));\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(shopActionType.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/NayanJagtap/Desktop/current/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","shopActionType","fetchCollectionSuccess","fetchCollectionFailure","firestore","convertCollectionSnapshotToMap","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionObject","error","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,eAA/D;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,YAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,gBAAgB,GAAGZ,IAAI,CAACM,8BAAD,EAAiCI,QAAjC,CAA7B;AACAT,IAAAA,GAAG,CAACE,sBAAsB,CAACS,gBAAD,CAAvB,CAAH;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdZ,IAAAA,GAAG,CAACG,sBAAsB,CAACS,KAAK,CAACC,OAAP,CAAvB,CAAH;AACD,GARsC,CASvC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMhB,SAAS,CAACG,cAAc,CAACc,sBAAhB,EAAwCT,qBAAxC,CAAf;AACD","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { shopActionType } from \"./shop.type\";\r\nimport { fetchCollectionSuccess, fetchCollectionFailure } from \"./shop.action\";\r\nimport {\r\n  firestore,\r\n  convertCollectionSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection(\"collection\");\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionObject = call(convertCollectionSnapshotToMap, snapshot);\r\n    put(fetchCollectionSuccess(collectionObject));\r\n  } catch (error) {\r\n    put(fetchCollectionFailure(error.message));\r\n  }\r\n  // collectionRef\r\n  //   .get()\r\n  //   .then((snapshot) => {\r\n  //     const collectionObject = convertCollectionSnapshotToMap(snapshot);\r\n  //     dispatch(fetchCollectionSuccess(collectionObject));\r\n  //   })\r\n  //   .catch((error) => dispatch(fetchCollectionFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n  yield takeEvery(shopActionType.FETCH_COLLECTION_START, fetchCollectionsAsync);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}