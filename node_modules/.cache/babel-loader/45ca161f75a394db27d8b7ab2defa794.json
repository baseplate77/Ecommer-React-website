{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { shopActionType } from \"./shop.type\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection(\"collection\");\n  const snapshot = yield collectionRef.get();\n  const collectionObject = call(convertCollectionSnapshotToMap, snapshot); // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionObject = convertCollectionSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionSuccess(collectionObject));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(shopActionType.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/NayanJagtap/Desktop/current/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","shopActionType","firestore","convertCollectionSnapshotToMap","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionObject","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,YAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,gBAAgB,GAAGV,IAAI,CAACI,8BAAD,EAAiCI,QAAjC,CAA7B,CAHuC,CAIvC;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,UAAUG,oBAAV,GAAiC;AACtC,QAAMZ,SAAS,CAACG,cAAc,CAACU,sBAAhB,EAAwCP,qBAAxC,CAAf;AACD","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { shopActionType } from \"./shop.type\";\r\nimport {\r\n  firestore,\r\n  convertCollectionSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  const collectionRef = firestore.collection(\"collection\");\r\n  const snapshot = yield collectionRef.get();\r\n  const collectionObject = call(convertCollectionSnapshotToMap, snapshot);\r\n  // collectionRef\r\n  //   .get()\r\n  //   .then((snapshot) => {\r\n  //     const collectionObject = convertCollectionSnapshotToMap(snapshot);\r\n  //     dispatch(fetchCollectionSuccess(collectionObject));\r\n  //   })\r\n  //   .catch((error) => dispatch(fetchCollectionFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n  yield takeEvery(shopActionType.FETCH_COLLECTION_START, fetchCollectionsAsync);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}