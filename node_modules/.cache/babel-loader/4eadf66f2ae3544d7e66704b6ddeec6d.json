{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionType from \"./user.type\";\nimport { signInFailure, signInSuccess, userSignoutSuccess, userSignoutFailure, setSession } from \"./user.action\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentuser } from \"../../firebase/firebase.utils\";\nexport function* setUserSnapshot(user, addtionalData) {\n  try {\n    const userRef = yield createUserProfileDocument(user, addtionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    console.log(error);\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* googleSignInStart() {\n  try {\n    console.log(\"user saga get called\");\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield setUserSnapshot(user);\n  } catch (error) {\n    console.log(error);\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionType.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\nexport function* emailSignInStart({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    console.log(\"yess\");\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield setUserSnapshot(user);\n  } catch (error) {\n    console.log(error);\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionType.EMAIL_SIGN_IN_START, emailSignInStart);\n}\nexport function* userSignOut() {\n  try {\n    yield auth.signOut();\n    yield put(userSignoutSuccess());\n  } catch (error) {\n    yield put(userSignoutFailure(error.message));\n  }\n}\nexport function* onUserSignOut() {\n  yield takeLatest(userActionType.USER_SIGN_OUT_START, userSignOut);\n}\n\nfunction* signUpStart({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield setUserSnapshot(user, displayName);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(userActionType.SIGN_UP_START, signUpStart);\n}\nexport function* sessionCheck() {\n  console.log(\"start\");\n  const userAuth = yield call(getCurrentuser);\n  console.log(userAuth);\n  yield put(setSession(userAuth));\n}\nexport function* onCheckSession() {\n  yield takeLatest(userActionType.CHECK_SEESION, sessionCheck);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onUserSignOut), call(onEmailSignInStart), call(onSignUpStart), call(onCheckSession)]);\n}","map":{"version":3,"sources":["C:/Users/NayanJagtap/Desktop/current/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionType","signInFailure","signInSuccess","userSignoutSuccess","userSignoutFailure","setSession","auth","googleProvider","createUserProfileDocument","getCurrentuser","setUserSnapshot","user","addtionalData","userRef","userSnapshot","get","id","data","error","console","log","message","googleSignInStart","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSignOut","signOut","onUserSignOut","USER_SIGN_OUT_START","signUpStart","displayName","createUserWithEmailAndPassword","onSignUpStart","SIGN_UP_START","sessionCheck","userAuth","onCheckSession","CHECK_SEESION","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport userActionType from \"./user.type\";\r\nimport {\r\n  signInFailure,\r\n  signInSuccess,\r\n  userSignoutSuccess,\r\n  userSignoutFailure,\r\n  setSession,\r\n} from \"./user.action\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentuser,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* setUserSnapshot(user, addtionalData) {\r\n  try {\r\n    const userRef = yield createUserProfileDocument(user, addtionalData);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* googleSignInStart() {\r\n  try {\r\n    console.log(\"user saga get called\");\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield setUserSnapshot(user);\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userActionType.GOOGLE_SIGN_IN_START, googleSignInStart);\r\n}\r\n\r\nexport function* emailSignInStart({ payload: { email, password } }) {\r\n  try {\r\n    console.log(\"yess\");\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield setUserSnapshot(user);\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userActionType.EMAIL_SIGN_IN_START, emailSignInStart);\r\n}\r\n\r\nexport function* userSignOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(userSignoutSuccess());\r\n  } catch (error) {\r\n    yield put(userSignoutFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onUserSignOut() {\r\n  yield takeLatest(userActionType.USER_SIGN_OUT_START, userSignOut);\r\n}\r\n\r\nfunction* signUpStart({ payload: { email, password, displayName } }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield setUserSnapshot(user, displayName);\r\n  } catch (error) {\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(userActionType.SIGN_UP_START, signUpStart);\r\n}\r\n\r\nexport function* sessionCheck() {\r\n  console.log(\"start\");\r\n  const userAuth = yield call(getCurrentuser);\r\n  console.log(userAuth);\r\n  yield put(setSession(userAuth));\r\n}\r\n\r\nexport function* onCheckSession() {\r\n  yield takeLatest(userActionType.CHECK_SEESION, sessionCheck);\r\n}\r\nexport function* userSaga() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onUserSignOut),\r\n    call(onEmailSignInStart),\r\n    call(onSignUpStart),\r\n    call(onCheckSession),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}