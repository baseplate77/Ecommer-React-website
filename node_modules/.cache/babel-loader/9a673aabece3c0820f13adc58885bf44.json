{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionType from \"./user.type\";\nimport { googleSignInFailure, googleSignInSuccess, userSignoutSuccess, userSignoutFailure } from \"./user.action\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* googleSignInStart() {\n  try {\n    console.log(\"user saga get called\");\n    const userAuth = yield auth.signInWithPopup(googleProvider);\n    const userSnapshotref = yield createUserProfileDocument(userAuth);\n    yield put(googleSignInSuccess(userAuth));\n  } catch (error) {\n    console.log(error);\n    yield put(googleSignInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionType.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\nexport function* userSignOut() {\n  try {\n    console.log(\"start\");\n    const user = yield auth.signOut();\n    console.log(\"user : \", user);\n    yield put(userSignoutSuccess());\n  } catch (error) {\n    yield put(userSignoutFailure(error.message));\n  }\n}\nexport function* onUserSignOut() {\n  yield takeLatest(userActionType.USER_SIGN_OUT_START, userSignOut);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onUserSignOut)]);\n}","map":{"version":3,"sources":["C:/Users/NayanJagtap/Desktop/current/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionType","googleSignInFailure","googleSignInSuccess","userSignoutSuccess","userSignoutFailure","auth","googleProvider","createUserProfileDocument","googleSignInStart","console","log","userAuth","signInWithPopup","userSnapshotref","error","message","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSignOut","user","signOut","onUserSignOut","USER_SIGN_OUT_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,cAAP,MAA2B,aAA3B;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,eALP;AAMA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,iBAAV,GAA8B;AACnC,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB;AACA,UAAMO,eAAe,GAAG,MAAMN,yBAAyB,CAACI,QAAD,CAAvD;AACA,UAAMd,GAAG,CAACK,mBAAmB,CAACS,QAAD,CAApB,CAAT;AACD,GALD,CAKE,OAAOG,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,UAAMjB,GAAG,CAACI,mBAAmB,CAACa,KAAK,CAACC,OAAP,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMpB,UAAU,CAACI,cAAc,CAACiB,oBAAhB,EAAsCT,iBAAtC,CAAhB;AACD;AAED,OAAO,UAAUU,WAAV,GAAwB;AAC7B,MAAI;AACFT,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMS,IAAI,GAAG,MAAMd,IAAI,CAACe,OAAL,EAAnB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,IAAvB;AACA,UAAMtB,GAAG,CAACM,kBAAkB,EAAnB,CAAT;AACD,GALD,CAKE,OAAOW,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACO,kBAAkB,CAACU,KAAK,CAACC,OAAP,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUM,aAAV,GAA0B;AAC/B,QAAMzB,UAAU,CAACI,cAAc,CAACsB,mBAAhB,EAAqCJ,WAArC,CAAhB;AACD;AAED,OAAO,UAAUK,QAAV,GAAqB;AAC1B,QAAMzB,GAAG,CAAC,CAACC,IAAI,CAACiB,mBAAD,CAAL,EAA4BjB,IAAI,CAACsB,aAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport userActionType from \"./user.type\";\r\nimport {\r\n  googleSignInFailure,\r\n  googleSignInSuccess,\r\n  userSignoutSuccess,\r\n  userSignoutFailure,\r\n} from \"./user.action\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* googleSignInStart() {\r\n  try {\r\n    console.log(\"user saga get called\");\r\n    const userAuth = yield auth.signInWithPopup(googleProvider);\r\n    const userSnapshotref = yield createUserProfileDocument(userAuth);\r\n    yield put(googleSignInSuccess(userAuth));\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(googleSignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userActionType.GOOGLE_SIGN_IN_START, googleSignInStart);\r\n}\r\n\r\nexport function* userSignOut() {\r\n  try {\r\n    console.log(\"start\");\r\n    const user = yield auth.signOut();\r\n    console.log(\"user : \", user);\r\n    yield put(userSignoutSuccess());\r\n  } catch (error) {\r\n    yield put(userSignoutFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onUserSignOut() {\r\n  yield takeLatest(userActionType.USER_SIGN_OUT_START, userSignOut);\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield all([call(onGoogleSignInStart), call(onUserSignOut)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}