{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionType from \"./user.type\";\nimport { signInFailure, signInSuccess, userSignoutSuccess, userSignoutFailure } from \"./user.action\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* getUserSnapshot(user) {\n  try {\n    const userRef = yield createUserProfileDocument(user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    console.log(error);\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* googleSignInStart() {\n  try {\n    console.log(\"user saga get called\");\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yieldgetUserSnapshot(user);\n  } catch (error) {\n    console.log(error);\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionType.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\nexport function* emailSignInStart({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    console.log(\"yess\");\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    getUserSnapshot(user);\n  } catch (error) {\n    console.log(error);\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionType.EMAIL_SIGN_IN_START, emailSignInStart);\n}\nexport function* userSignOut() {\n  try {\n    yield auth.signOut();\n    yield put(userSignoutSuccess());\n  } catch (error) {\n    yield put(userSignoutFailure(error.message));\n  }\n}\nexport function* onUserSignOut() {\n  yield takeLatest(userActionType.USER_SIGN_OUT_START, userSignOut);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onUserSignOut), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/NayanJagtap/Desktop/current/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionType","signInFailure","signInSuccess","userSignoutSuccess","userSignoutFailure","auth","googleProvider","createUserProfileDocument","getUserSnapshot","user","userRef","userSnapshot","get","id","data","error","console","log","message","googleSignInStart","signInWithPopup","yieldgetUserSnapshot","onGoogleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSignOut","signOut","onUserSignOut","USER_SIGN_OUT_START","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport userActionType from \"./user.type\";\r\nimport {\r\n  signInFailure,\r\n  signInSuccess,\r\n  userSignoutSuccess,\r\n  userSignoutFailure,\r\n} from \"./user.action\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* getUserSnapshot(user) {\r\n  try {\r\n    const userRef = yield createUserProfileDocument(user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* googleSignInStart() {\r\n  try {\r\n    console.log(\"user saga get called\");\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yieldgetUserSnapshot(user);\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userActionType.GOOGLE_SIGN_IN_START, googleSignInStart);\r\n}\r\n\r\nexport function* emailSignInStart({ payload: { email, password } }) {\r\n  try {\r\n    console.log(\"yess\");\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    getUserSnapshot(user);\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userActionType.EMAIL_SIGN_IN_START, emailSignInStart);\r\n}\r\n\r\nexport function* userSignOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(userSignoutSuccess());\r\n  } catch (error) {\r\n    yield put(userSignoutFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onUserSignOut() {\r\n  yield takeLatest(userActionType.USER_SIGN_OUT_START, userSignOut);\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onUserSignOut),\r\n    call(onEmailSignInStart),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}